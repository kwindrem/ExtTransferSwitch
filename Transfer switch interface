com.victronenergy.settings
Settings/SystemSetup/AcInput1

new:
/Settings/TransferSwitch/GridCurrentLimit
/Settings/TransferSwitch/GeneratorCurrentLimit
/Settings/TransferSwitch/GridType


com.victronenergy.system
Ac/ActiveIn/Source
VebusService: com.victronenergy.vebus.ttyS4


com.victronenergy.vebus.ttyS4	(name is based on VebusService parameter)

Ac/ActiveIn/ActiveInput ( not used yet )
Ac/ActiveIn/Connected ( not used yet )
Ac/ActiveIn/CurrentLimit	(update TransferSwitch... when this changes)
Ac/ActiveIn/CurrentLimitIsAdjustable 	(possibly add to verification logic (must be adjustable))

Ac/In/2/CurrentLimit	(if valid, deactivate transfer switch logic)


dbus_digitalinputs.py
INPUTTYPES = [
'Transfer switch' (add to end of list) (type_id == 11)

TRANSLATIONS = [
    Translation('grid input', 'generator input') (add to end of list)


add

class TransferSwitch(PinAlarm):
    _product_name = "External AC Input transfer switch"
    type_id = 11
    translation = 5


PageDigitalInputs.qml

	function getType(type){
		case "Transfer Switch": (add case)
			return qsTr("External AC Transfer Switch")

	function getState(st)
		case 12: (add case)
			return qsTr("Grid In")
		case 13: (add case)
			return qsTr("Generator In")


TileDigIn.qml (GuiMods)
same as above but case is based on numbers

init ()
	create new dbusSettings if they don't yet exist
	oldTransferSwitchState = -1 # force update first pass of loop ()

loop ()
	delay
	if Ac/In/2/CurrentLimit valid
		continue
	locate digital input of type "Transfer switch" (11)
	if not found:
		continue
	transferSwitchState = getTsState ()
	if Ac/In/1/CurrentLimit has changed: (could use dbus monitor)
		if transferSwitchState == 1:
			/Settings/TransferSwitch/In1CurrentLimit = Ac/ActiveIn/CurrentLimit
		else:
			/Settings/TransferSwitch/In2CurrentLimit = Ac/ActiveIn/CurrentLimit

	if Settings/SystemSetup/AcInput1 has changed: (could use dbus monitor)
		if transferSwitchState == 1:
			/Settings/TransferSwitch/In2Type = Settings/SystemSetup/AcInput1
		else:
			/Settings/TransferSwitch/In1Type = Settings/SystemSetup/AcInput1

	if transferSwitchState != oldTransferSwitchState:
		if transferSwitchState == 1:
			Ac/ActiveIn/CurrentLimit = /Settings/TransferSwitch/In2CurrentLimit
			Settings/SystemSetup/AcInput1 = /Settings/TransferSwitch/In2Type
		else:
			Ac/ActiveIn/CurrentLimit = /Settings/TransferSwitch/In1CurrentLimit
			Settings/SystemSetup/AcInput1 = /Settings/TransferSwitch/In1Type
	oldTransferSwitchState = transferSwitchState
